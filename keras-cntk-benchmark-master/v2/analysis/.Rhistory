install.packages(c("backports", "BH", "broom", "car", "caret", "crayon", "curl", "data.table", "debugme", "devtools", "dplyr", "geosphere", "glue", "gridExtra", "hms", "httr", "keras", "lava", "lazyeval", "lme4", "lubridate", "Matrix", "mgcv", "openssl", "PKI", "psych", "purrr", "quantreg", "raster", "Rcpp", "RcppEigen", "reticulate", "rlang", "rmarkdown", "rsconnect", "rstudioapi", "scales", "shiny", "stringi", "tensorflow", "tfruns", "tibble", "tidyr", "tidyselect", "tidyverse", "withr"))
library(scales)
library(tidyverse)
library(RColorBrewer)
sessionInfo()
theme_set(theme_minimal(base_size=9, base_family="Source Sans Pro") +
theme(plot.title = element_text(size=11, family="Source Sans Pro Bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(family="Source Sans Pro Semibold"),
plot.caption = element_text(size=6, color="#969696"),
axis.text.x = element_text(angle = 45, vjust = 0.75, size = 7),
legend.position="none"))
relative <- function(x) {
lab <- paste0(sprintf("%.2f", x), 'x')
}
standard_cost_hr <- 0.0475
k80_cost_hr <- 0.450
p100_cost_hr <- 1.460
cpu16_cost_hr <- 0.120
k80_cost_s <- (k80_cost_hr + standard_cost_hr) / 3600
p100_cost_s <- (p100_cost_hr + standard_cost_hr) / 3600
cpu16_cost_s <- cpu16_cost_hr / 3600
cpu32_cost_s <- cpu16_cost_s * 2
# works like a Python dict
costs <- c(gpu=gpu_cost_s, cpu8=cpu8_cost_s, cpu16=cpu16_cost_s, cpu32=cpu32_cost_s, cpu64=cpu64_cost_s)
base_label <- 'k80-tensorflow'
label_split <- strsplit(base_label, "-")
label-split
label_split
label_split[[1]]
base_label <- 'k80-tensorflow'
label_split <- str_split(base_label, "-")[[1]]
label_split
# frameworks <- c('tensorflow','cntk')
# platforms <- c("p100", "k80", "cpu32", "cpu16")
labels <- c('p100-tensorflow','p100-cntk', 'k80-tensorflow','k80-cntk', 'cpu32-tensorflow','cpu16-tensorflow')
base_label %in% labels
labels %in% base_label
!(labels %in% base_label)
labels[!(labels %in% base_label)]
# frameworks <- c('tensorflow','cntk')
# platforms <- c("p100", "k80", "cpu32", "cpu16")
labels <- c('p100-tensorflow','p100-cntk', 'k80-tensorflow','k80-cntk', 'cpu32-tensorflow','cpu16-tensorflow')
process_test_data <- function(file_name) {
base_label <- 'k80-tensorflow'
label_split <- str_split(base_label, "-")[[1]]
results <- read_csv(sprintf("../logs/%s/%s_%s.csv", label_split[1], file_name, label_split[2])) %>%
mutate(platform = label_split[1], framework = label_split[2]) %>%
group_by(platform, framework) %>%
summarize(total_time = sum(elapsed),
total_cost = total_time * costs[label_split[1]])
base_total_time <- results %>% pull(total_time)
base_total_cost <- results %>% pull(total_cost)
labels_tf <- labels[!(labels %in% base_label)]
for(i in 1:length(labels_tf)) {
label = labels_tf[i]
label_split <- str_split(label, "-")[[1]]
temp_df <- read_csv(sprintf("../logs/%s/%s_%s.csv", label_split[1], file_name, label_split[2])) %>%
mutate(platform = label_split[1], framework = label_split[2]) %>%
group_by(platform, framework) %>%
summarize(total_time = sum(elapsed),
total_cost = total_time * costs[label_split[1]])
results <- results %>% bind_rows(temp_df)
}
# Normalize
results <- results %>%
mutate(total_time_norm = total_time / base_total_time,
total_cost_norm = total_cost / base_total_cost
)
return(results)
}
process_test_data('cifar10_cnn')
standard_cost_hr <- 0.0475
k80_cost_hr <- 0.450
p100_cost_hr <- 1.460
cpu16_cost_hr <- 0.120
k80_cost_s <- (k80_cost_hr + standard_cost_hr) / 3600
p100_cost_s <- (p100_cost_hr + standard_cost_hr) / 3600
cpu16_cost_s <- cpu16_cost_hr / 3600
cpu32_cost_s <- cpu16_cost_s * 2
# works like a Python dict
costs <- c(k80=k80_cost_s, p100=p100_cost_s, cpu16=cpu16_cost_s, cpu32=cpu32_cost_s)
# frameworks <- c('tensorflow','cntk')
# platforms <- c("p100", "k80", "cpu32", "cpu16")
labels <- c('p100-tensorflow','p100-cntk', 'k80-tensorflow','k80-cntk', 'cpu32-tensorflow','cpu16-tensorflow')
process_test_data <- function(file_name) {
base_label <- 'k80-tensorflow'
label_split <- str_split(base_label, "-")[[1]]
results <- read_csv(sprintf("../logs/%s/%s_%s.csv", label_split[1], file_name, label_split[2])) %>%
mutate(platform = label_split[1], framework = label_split[2]) %>%
group_by(platform, framework) %>%
summarize(total_time = sum(elapsed),
total_cost = total_time * costs[label_split[1]])
base_total_time <- results %>% pull(total_time)
base_total_cost <- results %>% pull(total_cost)
labels_tf <- labels[!(labels %in% base_label)]
for(i in 1:length(labels_tf)) {
label = labels_tf[i]
label_split <- str_split(label, "-")[[1]]
temp_df <- read_csv(sprintf("../logs/%s/%s_%s.csv", label_split[1], file_name, label_split[2])) %>%
mutate(platform = label_split[1], framework = label_split[2]) %>%
group_by(platform, framework) %>%
summarize(total_time = sum(elapsed),
total_cost = total_time * costs[label_split[1]])
results <- results %>% bind_rows(temp_df)
}
# Normalize
results <- results %>%
mutate(total_time_norm = total_time / base_total_time,
total_cost_norm = total_cost / base_total_cost
)
return(results)
}
process_test_data('cifar10_cnn')
# frameworks <- c('tensorflow','cntk')
# platforms <- c("p100", "k80", "cpu32", "cpu16")
labels <- c('p100-tensorflow','p100-cntk', 'k80-tensorflow','k80-cntk', 'cpu32-tensorflow','cpu16-tensorflow')
process_test_data <- function(file_name) {
base_label <- 'k80-tensorflow'
label_split <- str_split(base_label, "-")[[1]]
results <- read_csv(sprintf("../logs/%s/%s_%s.csv", label_split[1], file_name, label_split[2]), col_types = cols()) %>%
mutate(platform = label_split[1], framework = label_split[2]) %>%
group_by(platform, framework) %>%
summarize(total_time = sum(elapsed),
total_cost = total_time * costs[label_split[1]])
base_total_time <- results %>% pull(total_time)
base_total_cost <- results %>% pull(total_cost)
labels_tf <- labels[!(labels %in% base_label)]
for(i in 1:length(labels_tf)) {
label = labels_tf[i]
label_split <- str_split(label, "-")[[1]]
temp_df <- read_csv(sprintf("../logs/%s/%s_%s.csv", label_split[1], file_name, label_split[2]), col_types = cols()) %>%
mutate(platform = label_split[1], framework = label_split[2]) %>%
group_by(platform, framework) %>%
summarize(total_time = sum(elapsed),
total_cost = total_time * costs[label_split[1]])
results <- results %>% bind_rows(temp_df)
}
# Normalize
results <- results %>%
mutate(total_time_norm = total_time / base_total_time,
total_cost_norm = total_cost / base_total_cost
)
return(results)
}
process_test_data('cifar10_cnn')
df_imdb_lstm <- process_test_data("imdb_bidirectional_lstm")
df_imdb_lstm
df_imdb_fasttext <- process_test_data("imdb_fasttext")
df_imdb_fasttext
df_mnist_mlp <- process_test_data("mnist_mlp")
df_mnist_mlp
df_mnist_cnn <- process_test_data("mnist_cnn")
df_mnist_cnn
df_cifar10_cnn <- process_test_data("cifar10_cnn")
df_cifar10_cnn
df_lstm_text <- process_test_data("lstm_text_generation")
df_lstm_text
df_custom_text <- process_test_data("text_generator_keras")
