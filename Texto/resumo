%resumo
Com a necessidade de compartilhar recursos de um único host, a baixa utilização de recursos computacionais em operação sobre a vida útil do equipamento se tornou algo inevitável. No momento em que a virtualização de máquinas foi concebida, um novo horizonte para um melhor uso do equipamento surgiu, possibilitando que mais de uma aplicação fosse utilizada ao mesmo tempo de forma isolada, ou seja, nenhuma aplicação poderia interferir na execução da outra. Apesar da virtualização completa de máquinas ter sido inovadora na década de 60, a evolução do kernel linux possibilitou a execução dessas aplicações sem uma virtualização completa e a necessidade de um sistema operacional virtualizado para cada aplicação. Com base nisso, a "nova" virtualização alcançou a execução de processos de forma isolada compartilhando os mesmos recursos do hospedeiro, cujo nome dado de contêiner.
Os contêineres são considerados ferramentas de virtualização mais “leves” do que as máquinas virtuais completas, porém, sem uma ferramenta adequada que gerenciasse essa virtualização, a utilização dessa nova teccnologia seria despendiosa. Após a publicação do docker em 2013, o usuário passou a gerenciar contêineres e seus recursos de forma mais simples(imagens, volumes e interfaces de rede).
%# NÃO FAZ SENTIDO NENHUM# Aplicando esse tipo de virtualização à nuvem e grandes clusters, os provedores fazem o uso da  implantação de contêineres com serviço, (utilizando interfaces como, Docker, LXC, etc.).
Após a facilidade de gerenciamento de contêineres sobre um mesmo host, a necessidade de atender uma escala maior como um cluster, foi necessária. Em 2015, sugiu a Iniciativa aberta de contêiner(OCI) pelas empresas Linux Foundation e Docker. Essa iniciativa estabeleceu padrões na arquitetura do projeto do docker, para que os orquestradores de contêineres fossem uma camada de software acima dos gerenciadores de contêinres da época. Como em 2015 já haviam algumas divergências de interesses de projeto com o docker, outras plataformas de contêineres surgiram seguindo os padrões da OCI.
%#O conceito  de contêiner é semelhante aos das máquinas virtuais(VMs), porém, consome comparativamente menos tempo e recursos para uma implantação. Na virtualização baseada em contêiner, o mesmo kernel linux está sendo compartilhado entre os contêineres e o sistema operacional da máquina física; daí estes serem mais leves em comparação com a uma virtualização comum que exige camadas de drivers do host ou simulação de outro hardware. Na conteinerização, os componentes de hardware e software são compartilhados entre a máquina física, ou seja, sistema operacional (SO) e as aplicações dos contêineres. Neste tipo de virtualização, o sistema operacional da máquina física é o principal responsável para garantir o isolamento entre as aplicações dos contêineres. 
%# Apesar de contêineres serem mais “leves” comparados a máquinas virtuais devido os contêineres fazerem o uso do espaço do usuário ao lado do espaço usuário padrão de um sistema operacional. Podemos realizar uma comparação entre a execução de tarefas que rodam em sistemas operacionais diretamente sobre o hardware e contêineres sobre o mesmo sistema operacional, pois o overhead de acesso do kernel, são bem parecidas.
Como os contêineres foram ganhando mais relevância comparado às máquinas virtuais por sua utilização mais eficiente. O interesse com relação a alocação de cargas de trabalho para cada um dos tipos de plataformas de contêiner está se tornando cada vez mais relevante em grande escala como na computação de alte performance e grandes projetos comerciais. E por isso, esse projeto propõe uma análise do desempenho de vários benchmarks comerciais e acadêmicos executados em diversos ambientes de contêineres, revelando que a interface de contêiner podman foi a mais eficiente na maioria dos caso, em segundo lugar o singulariy e por último o docker.
